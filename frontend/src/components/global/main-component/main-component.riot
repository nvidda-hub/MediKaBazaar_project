<main-component>

    <update-form-component 
        item={this.state.item}
        if={state.showFormUpdate}
        action={this.state.action}
        _id={this.state._id}
        handleUpdate={handleUpdate}>
    </update-form-component>

    <h1>Products <h1/>
    <button id="toggle_form_btn" onclick={toggleForm}>Add a Product</button>
    <form-component 
        item={this.state.item}
        if={state.showFormAdd}
        action={this.state.action}
        _id={this.state._id}
        handleCreate={handleCreate}>
    </form-component>
    
    <list-product 
        items={this.state.items} 
        handleUpdate={handleUpdate} 
        handleDelete={handleDelete}
        selectItemToUpdate={selectItemToUpdate}>
        
        </list-product>

    <search-component 
    
    getQueriedProducts={getQueriedProducts}>
    
    </search-component>

    <script>
        export default {
            state:{
                url:"http://127.0.0.1:8000/api/v1/products/",
                items:[],

                // tracking what is happening to form
                item:{
                    product_name:'',
                    quantity:0,
                    price:0.0,
                },
                action:"create",
                _id:"",
                showFormAdd:false,
                showFormUpdate:false,
                query_type:"all"
            },
            async onBeforeMount () {
                if(this.state.query_type === "all"){
                    this.getProducts();
                }
                else{

                    this.getQueriedProducts();
                }
            },

            // fetching all the products from api 
            async getProducts(){
                const response = await fetch(this.state.url)
                const items = await response.json()
                this.state.items = items
                this.state.product = {
                    product_name:'',
                    quantity:0,
                    price:0.0,
                }
                this.state.action =  "create"
                this.state._id=""
                this.state.showFormAdd = false
                this.update()
            },
            async getQueriedProducts(queryString){
                const response = await fetch(this.state.url+`search/${queryString}/`)
                const items = await response.json()
                console.log(items)
                this.state.items = items
                this.state.product = {
                    product_name:'',
                    quantity:0,
                    price:0.0,
                }
                this.state.action =  "create"
                this.state._id=""
                this.state.showFormAdd = false
                this.state.query_type = "filtered"
                this.update()
            },
            toggleForm(){
                this.state.showFormAdd = !this.state.showFormAdd
                // below line executed when form work is done
                this.update()
            },
            async handleCreate(item){
                const response = await fetch(this.state.url, {
                    method:"post",
                    headers:{
                        "Content-Type":"application/json; charset=UTF-8"
                    },
                    body:JSON.stringify({
                                    product_name: item[0],
                                    quantity: item[1],
                                    price: item[2]
                                })
                })
                console.log("response : ", response)
                this.getProducts()
            },
            async handleUpdate(item){
                console.log("item : ", item)
                console.log("item id : ", this.state.id)
                const response = await fetch(this.state.url+`${this.state.id}/`, {
                    method:"put",
                    headers:{
                        "Content-Type":"application/json"
                    },
                    body:JSON.stringify({
                                    product_name: item[0],
                                    quantity: item[1],
                                    price: item[2]
                                })
                })
                this.getProducts()
                this.state.showFormUpdate = false
            },
            async handleDelete(item){
                console.log("item selected for delete : ", item)
                const response = await fetch(this.state.url+`${item.id}/`, {
                    method:"delete",
                })
                this.getProducts()
            },
            selectItemToUpdate(item){
                console.log("item selected : ", item)
                this.state.item = item
                this.state.id = item.id
                this.state.action = "update"
                this.state.showFormUpdate = true
                this.update()
            }
        }
    </script>

</main-component>